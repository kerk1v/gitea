# Default values for gitea.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
## @section Global
#
## @param global.imageRegistry global image registry override
## @param global.imagePullSecrets global image pull secrets override; can be extended by `imagePullSecrets`
## @param global.storageClass global storage class override
## @param global.hostAliases global hostAliases which will be added to the pod's hosts files
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  hostAliases: []

namespace: ""
replicaCount: 1

strategy:
  type: "RollingUpdate"
  rollingUpdate:
    maxSurge: "100%"
    maxUnavailable: 0

clusterDomain: cluster.local

image:
  registry: ""
  repository: gitea/gitea
  tag: ""
  digest: ""
  pullPolicy: IfNotPresent
  rootless: true
  fullOverride: ""

imagePullSecrets: []

podSecurityContext:
  fsGroup: 1000

containerSecurityContext: {}

podDisruptionBudget: {}

service:
  http:
    type: ClusterIP
    port: 3000
    clusterIP: None
    loadBalancerIP:
    nodePort:
    externalTrafficPolicy:
    externalIPs:
    ipFamilyPolicy:
    ipFamilies:
    loadBalancerSourceRanges: []
    annotations: {}
    labels: {}
    loadBalancerClass:
  ssh:
    type: ClusterIP
    port: 22
    clusterIP: None
    loadBalancerIP:
    nodePort:
    externalTrafficPolicy:
    externalIPs:
    ipFamilyPolicy:
    ipFamilies:
    hostPort:
    loadBalancerSourceRanges: []
    annotations: {}
    labels: {}
    loadBalancerClass:

ingress:
  enabled: true
  className: traefik
  annotations:
    kubernetes.io/ingress.class: "traefik"
    cert-manager.io/cluster-issuer: "letsencrypt"
  hosts:
    - host: gitea.conxtor.com
      paths:
        - path: /
          pathType: Prefix
  tls: - hosts:
    - gitea.conxtor.com
    secretName: gitea-tls

resources: {}

schedulerName: ""
nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []
dnsConfig: {}
priorityClassName: ""

deployment:
  env: []
  terminationGracePeriodSeconds: 60
  labels: {}
  annotations: {}

serviceAccount:
  create: false
  name: ""
  automountServiceAccountToken: false
  imagePullSecrets: []
  annotations: {}
  labels: {}

persistence:
  enabled: true
  create: true
  mount: true
  claimName: gitea-shared-storage
  size: 10Gi
  accessModes:
    - ReadWriteOnce
  labels: {}
  storageClass:
  subPath:
  volumeName: ""
  annotations:
    helm.sh/resource-policy: keep

extraContainers: []
extraVolumes: []
extraContainerVolumeMounts: []
extraInitVolumeMounts: []
extraVolumeMounts: []

initPreScript: ""

initContainers:
  resources:
    limits: {}
    requests:
      cpu: 100m
      memory: 128Mi

signing:
  enabled: false
  gpgHome: /data/git/.gnupg
  privateKey: ""
  existingSecret: ""

actions:
  enabled: true
  statefulset:
    annotations: {}
    labels: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

    actRunner:
      repository: gitea/act_runner
      tag: 0.2.11
      pullPolicy: IfNotPresent
      config: |
        log:
          level: debug
        cache:
          enabled: false
        runner:
          labels:
            - "ubuntu-latest"

    dind:
      repository: docker
      tag: 25.0.2-dind
      pullPolicy: IfNotPresent
      extraEnvs: []

  init:
    image:
      repository: busybox
      tag: "1.36.1"

  provisioning:
    enabled: false
    annotations: {}
    labels: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    publish:
      repository: bitnami/kubectl
      tag: 1.29.0
      pullPolicy: IfNotPresent
    ttlSecondsAfterFinished: 300

  existingSecret: ""
  existingSecretKey: ""

gitea:
  admin:
    existingSecret: gitea-secrets
    username: ${admin-username}
    password: ${admin-password}
    email: ${admin-email}
    passwordMode: keepUpdated

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: ""
      relabelings: []
      scheme: ""
      scrapeTimeout: ""
      tlsConfig: {}

  ldap: []
  oauth: []

  config:
    server:
      SSH_PORT: 22
      SSH_LISTEN_PORT: 2222

  additionalConfigSources: []
  additionalConfigFromEnvs: []
  podAnnotations: {}

  ssh:
    logLevel: "INFO"

  livenessProbe:
    enabled: true
    tcpSocket:
      port: http
    initialDelaySeconds: 200
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10

  readinessProbe:
    enabled: true
    tcpSocket:
      port: http
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  startupProbe:
    enabled: false
    tcpSocket:
      port: http
    initialDelaySeconds: 60
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10

redis-cluster:
  enabled: false
  usePassword: false
  cluster:
    nodes: 2
    replicas: 1

redis:
  enabled: true
  architecture: standalone
  global:
    redis:
      password:
        valueFrom:
          secretKeyRef:
            name: gitea-secrets
            key: redis-password
  master:
    count: 1

postgresql-ha:
  enabled: false
  global:
    postgresql:
      database: gitea
      password: ${postgresql-password}
      username: gitea
  postgresql:
    repmgrPassword: changeme2
    postgresPassword: changeme1
    password: changeme4
  pgpool:
    adminPassword: changeme3
  service:
    ports:
      postgresql: 5432
  persistence:
    size: 10Gi

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        password:
          valueFrom:
            secretKeyRef:
              name: gitea-secrets
              key: postgresql-password
        database: gitea
        username: gitea
      service:
        ports:
          postgresql: 5432
  primary:
    persistence:
      size: 10Gi

checkDeprecation: true
test:
  enabled: true
  image:
    name: busybox
    tag: latest

extraDeploy: []